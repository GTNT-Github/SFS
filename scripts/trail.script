go.property("currentVelocity",vmath.vector3(0,10,0))
go.property("self",hash("/planet"))
G = 2.1
local planets = {"/planet","/center","/moon"}
function init(self,dt)
end

function on_message(self,message_id,message,sender)
    if message_id == hash("id") then
        self_object = tostring(self.self):gsub("%hash: %[",""):gsub("%]","")
        print(self.self)
        timer.delay(0.001,true,function()
            for i,v in pairs(planets) do
                if hash(v) ~= self.self then
                    local other_object = v
                    self_object = tostring(self.self):gsub("%hash: %[",""):gsub("%]","")
                    local sqrDst = vmath.length_sqr(go.get_position(other_object)-go.get_position(message.id))
                    local forceDir = vmath.normalize(go.get_position(other_object)-go.get_position(message.id))
                    local force = forceDir * G * go.get(self_object.."#collision", "mass") * go.get(other_object.."#collision", "mass") / sqrDst
                    local acceleration = force/go.get(self_object.."#collision","mass")
                    self.currentVelocity = self.currentVelocity+(acceleration)
                    go.set_position(go.get_position(self_object)+self.currentVelocity)
                    --local factory = factory.create("/planet#trails",go.get_position(message.id)+self.currentVelocity,nil,{self=self.self},vmath.vector3(0.3,0.3,0.3))
                    --msg.post(factory, "id",{planet=factory})
                end
            end
        end)
    end
end